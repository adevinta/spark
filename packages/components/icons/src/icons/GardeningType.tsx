import React, { type Ref } from 'react'

import { IconProps } from '../Types'

export const GardeningType = React.forwardRef(
  (
    { title, fill = 'currentColor', stroke = 'none', ...props }: IconProps,
    ref: Ref<SVGSVGElement>
  ) => (
    <svg
      ref={ref}
      viewBox="0 0 24 24"
      xmlns="http://www.w3.org/2000/svg"
      {...{ ...(title && { 'data-title': title }), fill, stroke, ...props }}
      dangerouslySetInnerHTML={{
        __html:
          (title === undefined ? '' : `<title>${title}</title>`) +
          '<path fill-rule="evenodd" clip-rule="evenodd" d="M14.0708 4.28847C14.5639 4.48405 14.8858 4.96948 14.879 5.50691C14.8733 5.64308 14.9253 5.77521 15.022 5.8698C15.1168 5.96386 15.2474 6.01102 15.3794 5.99883C15.9155 5.95482 16.4203 6.26053 16.6369 6.76048C16.8535 7.26043 16.7345 7.84485 16.3403 8.2165C16.242 8.30716 16.187 8.43649 16.1894 8.57133C16.1949 8.70777 16.2552 8.83597 16.3562 8.92616C16.7562 9.28415 16.8935 9.85765 16.7001 10.3622C16.5205 10.8307 16.0912 11.1472 15.6039 11.1813L15.4905 11.1841C15.3561 11.1761 15.2251 11.2293 15.1332 11.3293C15.0376 11.4236 14.9906 11.5578 15.0061 11.6922C15.0451 12.2361 14.743 12.7462 14.2516 12.9663C13.8399 13.152 13.3688 13.0972 13.0124 12.8383C13.2786 13.8391 13.3911 14.8781 13.3463 15.9179C13.4065 17.1483 13.2435 18.3788 12.8662 19.5481C14.2152 19.5794 15.547 19.8801 16.785 20.4338C16.9774 20.5406 17.054 20.7813 16.9598 20.9822C16.8894 21.1162 16.752 21.2 16.6024 21.2C16.5555 21.1942 16.5099 21.1805 16.4674 21.1596C15.1979 20.5911 13.82 20.3157 12.433 20.3532C11.1715 20.3269 9.91639 20.5402 8.73214 20.9822C8.59876 21.0541 8.43679 21.0429 8.3142 20.9534C8.19162 20.8639 8.12964 20.7115 8.15428 20.5602C8.17892 20.409 8.28592 20.285 8.43036 20.2403C9.58409 19.8004 10.803 19.5659 12.0334 19.5463C12.0384 19.5191 12.0476 19.4921 12.0597 19.4661C12.4438 18.3258 12.6109 17.1216 12.5521 15.9179C12.6043 14.8144 12.4682 13.7109 12.1507 12.6559L12.1233 12.6841C11.8863 12.9639 11.5416 13.1257 11.1782 13.1276C11.0182 13.1249 10.8598 13.0949 10.7096 13.0389C10.2125 12.8377 9.89424 12.3401 9.91546 11.797C9.92052 11.6629 9.86857 11.533 9.77284 11.4404C9.67711 11.3479 9.54683 11.3015 9.41513 11.3132C8.88002 11.3503 8.37896 11.0444 8.16034 10.5471C7.94262 10.0492 8.06071 9.46582 8.45418 9.0955C8.54975 8.99955 8.604 8.86908 8.60507 8.73261C8.60021 8.59829 8.53963 8.47233 8.4383 8.38585C8.03101 8.02932 7.89077 7.44998 8.08886 6.94235C8.29483 6.43933 8.78347 6.11601 9.31983 6.12786C9.45447 6.13704 9.58594 6.08364 9.67721 5.9827C9.76892 5.88588 9.8152 5.75369 9.80427 5.61981C9.76574 5.0835 10.0608 4.57975 10.5434 4.35819C11.0259 4.13662 11.5933 4.24432 11.9644 4.62791C12.0637 4.71752 12.1893 4.77138 12.3218 4.78113C12.4516 4.7803 12.5753 4.72481 12.6633 4.62791C13.0171 4.22812 13.5778 4.09288 14.0708 4.28847ZM13.2589 5.16015C13.0238 5.43332 12.6869 5.59415 12.3297 5.60368C11.9706 5.61027 11.625 5.46408 11.3767 5.20047C11.2438 5.04685 11.027 5.00084 10.8446 5.08757C10.6609 5.1646 10.5481 5.35433 10.5667 5.5553C10.5912 5.91849 10.4644 6.27544 10.2172 6.53914C9.96702 6.79896 9.62204 6.942 9.26424 6.93428C9.06577 6.93263 8.88639 7.05406 8.81156 7.24073C8.73834 7.42911 8.79283 7.64394 8.94657 7.77297C9.21396 8.01474 9.36691 8.36099 9.36691 8.72455C9.36691 9.08811 9.21396 9.43436 8.94657 9.67613C8.8004 9.81444 8.7587 10.0327 8.84333 10.2164C8.9181 10.4125 9.1143 10.532 9.31983 10.5067L9.43895 10.4987C9.78015 10.5007 10.1062 10.6421 10.3437 10.8908C10.5812 11.1396 10.7102 11.4749 10.7017 11.8212C10.6944 12.0263 10.8154 12.2138 11.0035 12.2889C11.189 12.3633 11.4006 12.308 11.5276 12.1519C11.7719 11.8683 12.1255 11.7064 12.4965 11.7083C12.8534 11.7135 13.1946 11.8579 13.4495 12.1115C13.5824 12.2652 13.7993 12.3112 13.9816 12.2244C14.1666 12.1444 14.2791 11.9518 14.2596 11.7486C14.2346 11.3864 14.3621 11.0303 14.6104 10.769C14.8312 10.5366 15.1289 10.3985 15.4434 10.3793L15.562 10.3777C15.7568 10.3675 15.9305 10.25 16.0147 10.0713C16.0879 9.8829 16.0334 9.66806 15.8797 9.53904C15.6107 9.30031 15.4523 8.95818 15.4429 8.59552C15.4364 8.2308 15.5804 7.87994 15.84 7.62781C15.9736 7.48781 16.0096 7.27923 15.9308 7.10145C15.852 6.92368 15.6744 6.81269 15.4826 6.82139C15.128 6.84107 14.7809 6.7129 14.5216 6.46656C14.2379 6.2219 14.0775 5.86064 14.0849 5.48272C14.0911 5.27981 13.9699 5.09521 13.7831 5.02306C13.5975 4.9487 13.386 5.00404 13.2589 5.16015ZM13.4078 6.18076C14.3928 6.5977 15.0331 7.57643 15.0299 8.66003C15.0255 10.1355 13.8464 11.3293 12.3933 11.3293C11.3261 11.3293 10.3642 10.6761 9.95657 9.67467C9.54894 8.67323 9.77598 7.52103 10.5317 6.75596C11.2874 5.99088 12.4228 5.76382 13.4078 6.18076ZM12.3933 6.78913C11.3757 6.78913 10.5508 7.62676 10.5508 8.66003C10.5508 9.69331 11.3757 10.5309 12.3933 10.5309C13.4108 10.5309 14.2357 9.69331 14.2357 8.66003C14.2357 8.16384 14.0416 7.68797 13.6961 7.3371C13.3506 6.98624 12.8819 6.78913 12.3933 6.78913Z"/>',
      }}
    />
  )
)

GardeningType.displayName = 'GardeningType'

export const tags = ['gardening_type', 'criteria', 'house']
