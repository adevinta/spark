import React, { type Ref } from 'react'

import { IconProps } from '../Types'

export const Dress = React.forwardRef(
  (
    { title, fill = 'currentColor', stroke = 'none', ...props }: IconProps,
    ref: Ref<SVGSVGElement>
  ) => (
    <svg
      ref={ref}
      viewBox="0 0 24 24"
      xmlns="http://www.w3.org/2000/svg"
      {...{ ...(title && { 'data-title': title }), fill, stroke, ...props }}
      dangerouslySetInnerHTML={{
        __html:
          (title === undefined ? '' : `<title>${title}</title>`) +
          '<path fill-rule="evenodd" clip-rule="evenodd" d="M18.113 9.22C18.4584 9.57 19.0209 9.57 19.3662 9.22L22.741 5.8C23.0863 5.45 23.0863 4.88 22.741 4.53L18.5275 0.26C18.3597 0.09 18.1328 0 17.9058 0H6.10406C5.86723 0 5.64028 0.09 5.4824 0.26L1.25903 4.53C0.913658 4.88 0.913658 5.45 1.25903 5.8L4.63377 9.22C4.97914 9.57 5.5416 9.57 5.88697 9.22L6.90334 8.19V10.3C6.90334 10.3 6.88361 10.32 6.88361 10.33C6.77506 10.6 6.7948 10.89 6.90334 11.13V12C6.90334 12.39 6.7948 12.78 6.55797 13.28C6.39022 13.63 6.19287 13.98 5.95604 14.39C5.83763 14.59 5.71922 14.81 5.58107 15.05C4.80152 16.47 3.9233 18.32 3.63714 21.13C3.59767 21.49 3.63714 21.86 3.74568 22.2C3.85423 22.55 4.04171 22.86 4.27854 23.13C4.51536 23.4 4.81139 23.62 5.13703 23.77C5.46266 23.92 5.8179 23.99 6.17313 24H17.8071C18.1624 24 18.5176 23.92 18.8432 23.77C19.1689 23.62 19.4649 23.41 19.7017 23.14C19.9386 22.87 20.126 22.55 20.2346 22.2C20.3431 21.85 20.3826 21.49 20.3431 21.13C20.057 18.32 19.1787 16.47 18.3992 15.05C18.261 14.81 18.1426 14.59 18.0242 14.39C17.7874 13.98 17.59 13.63 17.4223 13.28C17.1855 12.78 17.0769 12.39 17.0769 12V11.13C17.1855 10.88 17.2151 10.6 17.0967 10.33C17.0967 10.32 17.0769 10.31 17.0769 10.3V8.19L18.0933 9.22H18.113ZM5.25544 7.32L3.13389 5.17L6.4593 1.8H17.521L20.8464 5.17L18.7248 7.32L16.8204 5.39C16.5638 5.13 16.1888 5.06 15.8533 5.2C15.5178 5.34 15.3106 5.67 15.3106 6.03V9.99C14.2449 10.38 13.12 10.59 11.9852 10.59C10.8504 10.59 9.7255 10.38 8.65979 9.99V6.03C8.65979 5.67 8.4427 5.34 8.11707 5.2C7.79143 5.06 7.40659 5.14 7.15003 5.39L5.24557 7.32H5.25544ZM18.6064 21.32C18.6163 21.43 18.6064 21.55 18.5669 21.65C18.5373 21.76 18.4781 21.86 18.3992 21.94C18.3203 22.02 18.2314 22.09 18.1328 22.14C18.0341 22.19 17.9255 22.21 17.8071 22.21H6.183C6.07446 22.21 5.95604 22.19 5.85737 22.14C5.75869 22.09 5.66001 22.03 5.59094 21.94C5.52187 21.86 5.46266 21.76 5.42319 21.65C5.39359 21.54 5.37385 21.43 5.38372 21.32C5.64028 18.84 6.40009 17.23 7.11056 15.93C7.21911 15.74 7.31778 15.55 7.42633 15.36C7.68289 14.92 7.92958 14.47 8.12693 14.05C8.4131 13.45 8.63019 12.8 8.64005 12.08C9.7255 12.4 10.8405 12.57 11.9753 12.57C13.1101 12.57 14.2252 12.4 15.3106 12.08C15.3303 12.81 15.5474 13.46 15.8237 14.05C16.0211 14.47 16.2776 14.91 16.5243 15.36C16.6329 15.55 16.7414 15.74 16.8401 15.93C17.5604 17.22 18.3203 18.83 18.5669 21.32H18.6064Z"/>',
      }}
    />
  )
)

export const tags = ['dress', 'categories']
