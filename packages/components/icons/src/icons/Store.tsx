import React, { type Ref } from 'react'

import { IconProps } from '../Types'

export const Store = React.forwardRef(
  (
    { title, fill = 'currentColor', stroke = 'none', ...props }: IconProps,
    ref: Ref<SVGSVGElement>
  ) => (
    <svg
      ref={ref}
      viewBox="0 0 24 24"
      xmlns="http://www.w3.org/2000/svg"
      {...{ ...(title && { 'data-title': title }), fill, stroke, ...props }}
      dangerouslySetInnerHTML={{
        __html:
          (title === undefined ? '' : `<title>${title}</title>`) +
          '<path fill-rule="evenodd" clip-rule="evenodd" d="M15.9982 5.19995C16.3837 5.19995 16.7414 5.42508 16.9094 5.77368L18.963 10.0277C18.9907 10.0849 19.002 10.1474 18.9997 10.2092C19.0005 10.9305 18.6285 11.5667 18.0637 11.9447V17.447H18.4492C18.6562 17.447 18.8242 17.6157 18.8242 17.8235C18.8242 18.0313 18.6562 18.2 18.4492 18.2H4.55214C4.34439 18.2 4.17714 18.0313 4.17714 17.8235C4.17714 17.6157 4.34439 17.447 4.55214 17.447H4.93765V11.9447C4.37214 11.5667 4.00013 10.9305 4.00013 10.2092C3.99863 10.1474 4.00988 10.0849 4.03763 10.0277L6.09193 5.77368C6.25993 5.42508 6.61769 5.19995 7.00245 5.19995H15.9982ZM15.1034 13.7276H12.9891V17.447H15.1034V13.7276ZM15.0786 11.3453C14.6976 11.9228 14.0399 12.3076 13.2891 12.3076C12.5391 12.3076 11.8813 11.9228 11.5003 11.3453C11.12 11.9228 10.4615 12.3076 9.71151 12.3076C8.96149 12.3076 8.30298 11.9228 7.92272 11.3453C7.54246 11.9228 6.8847 12.3076 6.13393 12.3076C5.98093 12.3076 5.83167 12.2895 5.68767 12.2594V17.447H12.2391V13.3511C12.2391 13.1426 12.4071 12.9747 12.6141 12.9747H15.4784C15.6861 12.9747 15.8534 13.1426 15.8534 13.3511V17.447H17.3137V12.2594C17.1697 12.2895 17.0204 12.3076 16.8667 12.3076C16.1167 12.3076 15.4581 11.9228 15.0786 11.3453ZM10.811 12.9747C11.018 12.9747 11.186 13.1426 11.186 13.3511V16.0135C11.186 16.2213 11.018 16.3899 10.811 16.3899H7.1337C6.92595 16.3899 6.75869 16.2213 6.75869 16.0135V13.3511C6.75869 13.1426 6.92595 12.9747 7.1337 12.9747H10.811ZM10.436 13.7276H7.50871V15.637H10.436V13.7276ZM18.1942 10.5676H15.5399C15.7026 11.1345 16.2329 11.5546 16.8667 11.5546C17.5012 11.5546 18.0314 11.1345 18.1942 10.5676ZM14.6166 10.5676H11.9623C12.1251 11.1345 12.6553 11.5546 13.2891 11.5546C13.9236 11.5546 14.4539 11.1345 14.6166 10.5676ZM11.039 10.5676H8.38473C8.54673 11.1345 9.07775 11.5546 9.71151 11.5546C10.346 11.5546 10.8763 11.1345 11.039 10.5676ZM7.46146 10.5676H4.8064C4.96915 11.1345 5.49942 11.5546 6.13393 11.5546C6.76844 11.5546 7.29871 11.1345 7.46146 10.5676ZM8.41473 5.95288H7.00245C6.9027 5.95288 6.81044 6.0116 6.76619 6.10196L4.97365 9.81463H7.64896L8.41473 5.95288ZM15.9982 5.95288H14.5746L15.3396 9.81463H18.0269L16.2344 6.10196C16.1909 6.0116 16.0979 5.95288 15.9982 5.95288ZM11.1253 5.95288H9.179L8.41323 9.81463H11.1253V5.95288ZM13.8096 5.95288H11.8753V9.81463H14.5754L13.8096 5.95288Z"/>',
      }}
    />
  )
)

export const tags = ['store', 'criteria', 'location']
