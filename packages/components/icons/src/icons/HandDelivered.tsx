import React, { type Ref } from 'react'

import { IconProps } from '../Types'

export const HandDelivered = React.forwardRef(
  (
    { title, fill = 'currentColor', stroke = 'none', ...props }: IconProps,
    ref: Ref<SVGSVGElement>
  ) => (
    <svg
      ref={ref}
      viewBox="0 0 24 24"
      xmlns="http://www.w3.org/2000/svg"
      {...{ ...(title && { 'data-title': title }), fill, stroke, ...props }}
      dangerouslySetInnerHTML={{
        __html:
          (title === undefined ? '' : `<title>${title}</title>`) +
          '<path fill-rule="evenodd" clip-rule="evenodd" d="M3.60608 7.27417C3.60608 8.52935 4.6236 9.54688 5.87878 9.54688C7.13396 9.54688 8.15149 8.52935 8.15149 7.27417C8.15149 6.01899 7.13396 5.00146 5.87878 5.00146C4.6236 5.00146 3.60608 6.01899 3.60608 7.27417ZM4.35608 7.27417C4.35608 8.11514 5.03782 8.79688 5.87878 8.79688C6.71975 8.79688 7.40149 8.11514 7.40149 7.27417C7.40149 6.4332 6.71975 5.75146 5.87878 5.75146C5.03782 5.75146 4.35608 6.4332 4.35608 7.27417Z"/><path d="M7.18961 10.2295C7.75316 10.2295 8.28683 10.483 8.64291 10.9198L9.58757 12.0786C9.80121 12.3407 10.1214 12.4927 10.4595 12.4927H11.3599C11.567 12.4927 11.7349 12.6606 11.7349 12.8677V14.7883C11.7349 14.9954 11.567 15.1633 11.3599 15.1633H9.7554C9.2909 15.1633 8.84293 14.9909 8.49829 14.6795L8.01424 14.2421 8.27687 21.2091C8.28467 21.4161 8.12322 21.5902 7.91626 21.598 7.7093 21.6058 7.5352 21.4443 7.5274 21.2374L7.23128 13.3819C7.2256 13.2312 7.31073 13.0918 7.44737 13.028 7.584 12.9642 7.74556 12.9884 7.85744 13.0895L9.00114 14.123C9.20792 14.3099 9.4767 14.4133 9.7554 14.4133H10.9849V13.2427H10.4595C9.89599 13.2427 9.36233 12.9893 9.00625 12.5525L8.06159 11.3937C7.84794 11.1316 7.52774 10.9795 7.18961 10.9795H4.20115C3.99404 10.9795 3.82615 10.8116 3.82615 10.6045 3.82615 10.3974 3.99404 10.2295 4.20115 10.2295H7.18961ZM15.5754 10.9198C15.9314 10.483 16.4651 10.2295 17.0286 10.2295H20.0171C20.2242 10.2295 20.3921 10.3974 20.3921 10.6045 20.3921 10.8116 20.2242 10.9795 20.0171 10.9795H17.0286C16.6905 10.9795 16.3703 11.1316 16.1567 11.3937L15.212 12.5525C14.8559 12.9893 14.3223 13.2427 13.7587 13.2427H13.2334V14.4133H14.4629C14.7416 14.4133 15.0103 14.3099 15.2171 14.123L16.3608 13.0895C16.4727 12.9884 16.6343 12.9642 16.7709 13.028 16.9075 13.0918 16.9927 13.2312 16.987 13.3819L16.6909 21.2374C16.6831 21.4443 16.509 21.6058 16.302 21.598 16.095 21.5902 15.9336 21.4161 15.9414 21.2091L16.204 14.2421 15.72 14.6795C15.3753 14.9909 14.9274 15.1633 14.4629 15.1633H12.8584C12.6513 15.1633 12.4834 14.9954 12.4834 14.7883V12.8677C12.4834 12.6606 12.6513 12.4927 12.8584 12.4927H13.7587C14.0969 12.4927 14.417 12.3407 14.6307 12.0786L15.5754 10.9198Z"/><path fill-rule="evenodd" clip-rule="evenodd" d="M20.6122 7.27417C20.6122 8.52935 19.5947 9.54688 18.3395 9.54688C17.0843 9.54688 16.0668 8.52935 16.0668 7.27417C16.0668 6.01899 17.0843 5.00146 18.3395 5.00146C19.5947 5.00146 20.6122 6.01899 20.6122 7.27417ZM19.8622 7.27417C19.8622 8.11514 19.1804 8.79688 18.3395 8.79688C17.4985 8.79688 16.8168 8.11514 16.8168 7.27417C16.8168 6.4332 17.4985 5.75146 18.3395 5.75146C19.1804 5.75146 19.8622 6.4332 19.8622 7.27417Z"/>',
      }}
    />
  )
)

export const tags = ['hand-delivered', 'criteria', 'generic']
