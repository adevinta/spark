import React, { type Ref } from 'react'

import { IconProps } from '../Types'

export const Clean = React.forwardRef(
  (
    { title, fill = 'currentColor', stroke = 'none', ...props }: IconProps,
    ref: Ref<SVGSVGElement>
  ) => (
    <svg
      ref={ref}
      viewBox="0 0 24 24"
      xmlns="http://www.w3.org/2000/svg"
      {...{ ...(title && { 'data-title': title }), fill, stroke, ...props }}
      dangerouslySetInnerHTML={{
        __html:
          (title === undefined ? '' : `<title>${title}</title>`) +
          '<path fill-rule="evenodd" clip-rule="evenodd" d="M12.7643 5.14205C13.1979 5.14205 13.5494 5.47807 13.5494 5.89257V6.51551C13.5494 6.93001 13.1979 7.26603 12.7643 7.26603L11.2032 7.26559L11.2055 7.27774C11.2726 7.79483 11.4139 8.30106 11.6257 8.78208C11.6804 8.86754 11.697 8.97035 11.672 9.06762C11.6469 9.16489 11.5822 9.24854 11.4922 9.29994C11.4286 9.33712 11.3548 9.35541 11.2802 9.35248C11.1424 9.35324 11.0143 9.28488 10.9426 9.17235C10.7319 8.71988 10.5781 8.24593 10.484 7.76048C10.2884 8.01657 9.99932 8.19433 9.67439 8.25941L9.67455 9.04275C10.0932 9.18508 10.4023 9.55007 10.4473 9.98951L10.453 10.1008L10.4533 10.5097C11.2977 10.6626 11.9436 11.3027 12.006 12.0866L12.011 12.2115V18.4633C12.011 19.3841 11.2074 20.1375 10.1916 20.1963L10.0635 20.2H6.9475C5.91495 20.2 5.07008 19.4834 5.00414 18.5775L5 18.4633V12.2115C5 11.3712 5.66929 10.6703 6.55845 10.5095L6.558 10.1008C6.558 9.61217 6.88327 9.19647 7.33723 9.04249L7.3372 8.2766C7.10507 8.24241 6.89359 8.12332 6.74963 7.9415C6.57832 7.72822 6.51766 7.4521 6.58474 7.19097L6.92238 5.98263C7.0548 5.48888 7.51979 5.14319 8.05306 5.14205H12.7643ZM9.28853 11.2229L7.71871 11.2222L7.7265 11.223L7.68366 11.2222L6.9475 11.223C6.34012 11.223 5.84097 11.6309 5.78435 12.1525L5.779 12.2516V18.4233C5.779 18.9579 6.24242 19.3973 6.83497 19.4472L6.9475 19.4519H10.0635C10.6709 19.4519 11.17 19.0439 11.2267 18.5223L11.232 18.4233V12.2516C11.232 11.6835 10.7089 11.223 10.0635 11.223L9.32657 11.2222L9.28451 11.223L9.28853 11.2229ZM6.9475 14.2153C7.13872 14.2153 7.29775 14.3476 7.33073 14.5221L7.337 14.5893V17.5817C7.337 17.7882 7.16262 17.9557 6.9475 17.9557C6.75629 17.9557 6.59726 17.8234 6.56428 17.6489L6.558 17.5817V14.5893C6.558 14.3828 6.73239 14.2153 6.9475 14.2153ZM6.9475 11.971C7.13872 11.971 7.29775 12.1034 7.33073 12.2778L7.337 12.3451V13.0932C7.337 13.2997 7.16262 13.4672 6.9475 13.4672C6.75629 13.4672 6.59726 13.3349 6.56428 13.1604L6.558 13.0932V12.3451C6.558 12.1385 6.73239 11.971 6.9475 11.971ZM9.28451 9.72679H7.7265C7.53529 9.72679 7.37626 9.85911 7.34328 10.0336L7.337 10.1008V10.4749H9.67401V10.1008C9.67401 9.91721 9.53622 9.76449 9.35452 9.73282L9.28451 9.72679ZM8.895 8.28673H8.116V8.97871H8.895V8.28673ZM16.7059 7.30355L17.6482 7.50619C17.865 7.52899 18.0214 7.71548 17.9976 7.92273C17.9737 8.12998 17.7786 8.27951 17.5618 8.25671V8.2417H17.4754L16.5332 8.03156C16.4318 8.01202 16.3433 7.95354 16.2884 7.86982C16.2335 7.78609 16.2169 7.68447 16.2427 7.58875C16.2633 7.49157 16.3242 7.40647 16.4114 7.35278C16.4986 7.29908 16.6048 7.28133 16.7059 7.30355ZM14.6016 6.81571L15.5439 7.01835C15.7607 7.04115 15.9171 7.22764 15.8933 7.43489C15.8694 7.64214 15.6743 7.79167 15.4575 7.76888L15.4182 7.79139H15.324L14.421 7.56623C14.2042 7.51857 14.0688 7.31192 14.1187 7.10466C14.1686 6.89741 14.3848 6.76805 14.6016 6.81571ZM9.41145 7.48255C9.61904 7.48292 9.80965 7.4267 9.90613 7.25102C10.1375 6.82006 10.6007 6.54807 11.1075 6.54553H12.7643V5.92259L8.05306 5.89257C7.87637 5.89352 7.72211 6.00718 7.67617 6.17026L7.35424 7.37861C7.33474 7.41088 7.3346 7.45059 7.35381 7.48297L9.41145 7.48255ZM15.3868 5.82503C15.6036 5.82503 15.7794 5.99304 15.7794 6.20029C15.7794 6.40754 15.6036 6.57555 15.3868 6.57555H14.421C14.2042 6.57555 14.0284 6.40754 14.0284 6.20029C14.0284 5.99304 14.2042 5.82503 14.421 5.82503H15.3868ZM17.5618 5.82503C17.7786 5.82503 17.9544 5.99304 17.9544 6.20029C17.9544 6.40754 17.7786 6.57555 17.5618 6.57555H16.6117C16.3949 6.57555 16.2191 6.40754 16.2191 6.20029C16.2191 5.99304 16.3949 5.82503 16.6117 5.82503H17.5618ZM15.7951 4.93941C15.8185 5.03698 15.8001 5.13944 15.7441 5.224C15.6881 5.30857 15.599 5.36823 15.4967 5.38972L14.5545 5.59236L14.4681 5.61488C14.2513 5.63768 14.0562 5.48815 14.0323 5.2809C14.0085 5.07365 14.1649 4.88716 14.3818 4.86436L15.3318 4.65421C15.5419 4.61233 15.7482 4.73933 15.7951 4.93941ZM17.7727 4.25469C17.8615 4.30704 17.9243 4.39165 17.9466 4.4891C17.9699 4.58667 17.9516 4.68912 17.8956 4.77369C17.8395 4.85825 17.7505 4.91791 17.6482 4.93941L16.7059 5.14205L16.6196 5.14956C16.4362 5.15266 16.277 5.02909 16.2427 4.85685C16.2169 4.76113 16.2335 4.65951 16.2884 4.57579C16.3433 4.49206 16.4318 4.43358 16.5332 4.41404L17.4754 4.2114C17.5766 4.1867 17.6838 4.20233 17.7727 4.25469Z"/>',
      }}
    />
  )
)

Clean.displayName = 'Clean'

export const tags = ['clean', 'criteria', 'holidays']
