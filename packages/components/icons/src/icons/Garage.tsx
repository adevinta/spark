import React, { type Ref } from 'react'

import { IconProps } from '../Types'

export const Garage = React.forwardRef(
  (
    { title, fill = 'currentColor', stroke = 'none', ...props }: IconProps,
    ref: Ref<SVGSVGElement>
  ) => (
    <svg
      ref={ref}
      viewBox="0 0 24 24"
      xmlns="http://www.w3.org/2000/svg"
      {...{ ...(title && { 'data-title': title }), fill, stroke, ...props }}
      dangerouslySetInnerHTML={{
        __html:
          (title === undefined ? '' : `<title>${title}</title>`) +
          '<path fill-rule="evenodd" clip-rule="evenodd" d="M12.7436 4.21184L12.8026 4.23285L20.7818 7.86807C20.8956 7.91992 20.9746 8.02572 20.9949 8.1479L21 8.21017V18.825C21 19.0321 20.8345 19.2 20.6304 19.2C20.449 19.2 20.2981 19.0673 20.2668 18.8924L20.2609 18.825V8.4532L12.65 4.98595L4.73913 8.5657V18.825C4.73913 19.009 4.6084 19.1622 4.436 19.1939L4.36957 19.2C4.18814 19.2 4.03725 19.0673 4.00595 18.8924L4 18.825V8.3225C4 8.19562 4.06305 8.07892 4.16496 8.0102L4.21905 7.98001L12.5007 4.23246C12.5776 4.19768 12.6632 4.19081 12.7436 4.21184ZM14.9693 7.94997C15.4371 7.94743 15.8639 8.22538 16.0819 8.666L16.1284 8.77051L17.1488 11.3711L17.8429 10.6773C17.8906 10.6295 17.9497 10.5977 18.0128 10.5847L18.0771 10.5782H19.1102C19.3004 10.5782 19.4545 10.7444 19.4545 10.9494C19.4545 11.1316 19.3327 11.2832 19.1721 11.3146L19.1102 11.3206H18.2121L17.7541 11.7774C17.9278 11.8282 18.1139 11.9005 18.3013 11.9998C19.0123 12.3764 19.4545 13.0249 19.4545 13.9662V17.2882C19.4545 17.4822 19.3086 17.6394 19.1287 17.6394L18.6685 17.6387C18.6772 17.677 18.6818 17.7168 18.6818 17.7583C18.6818 18.5545 17.9899 19.2 17.1364 19.2C16.2828 19.2 15.5909 18.5545 15.5909 17.7583C15.5909 17.7168 15.5955 17.677 15.6043 17.6387H9.39573C9.40452 17.677 9.40909 17.7168 9.40909 17.7583C9.40909 18.5545 8.71717 19.2 7.86364 19.2C7.01011 19.2 6.31818 18.5545 6.31818 17.7583C6.31818 17.7168 6.32275 17.677 6.33154 17.6387L5.87135 17.6394C5.69136 17.6394 5.54545 17.4822 5.54545 17.2882V13.9662C5.54545 13.0242 5.9907 12.3758 6.70602 11.9994C6.89119 11.9019 7.07499 11.8306 7.24868 11.7799L6.78719 11.3206H5.88981C5.72076 11.3206 5.58016 11.1893 5.551 11.0161L5.54545 10.9494C5.54545 10.7672 5.66727 10.6156 5.82791 10.5842L5.88981 10.5782H6.92286C6.98803 10.5782 7.05139 10.5981 7.10587 10.6349L7.15712 10.6773L7.85055 11.3711L8.8722 8.76891C9.05645 8.30544 9.46307 7.9942 9.92213 7.9543L10.0289 7.94997H14.9693ZM8.63636 17.7583C8.63636 17.6416 7.09091 17.6416 7.09091 17.7583C7.09091 18.1564 7.43687 18.4791 7.86364 18.4791C8.2904 18.4791 8.63636 18.1564 8.63636 17.7583ZM17.9091 17.7583C17.9091 17.6416 16.3636 17.6416 16.3636 17.7583C16.3636 18.1564 16.7096 18.4791 17.1364 18.4791C17.5631 18.4791 17.9091 18.1564 17.9091 17.7583ZM17.1678 12.3784H7.84514C7.81715 12.3801 7.77286 12.385 7.7157 12.3944L7.58526 12.4192C7.38168 12.4632 7.17856 12.5323 6.99203 12.6305C6.48525 12.8971 6.19724 13.3166 6.19724 13.9662V16.9371H18.8028V13.9662C18.8028 13.3593 18.5535 12.9534 18.1114 12.6854L18.0137 12.63C17.8287 12.532 17.6272 12.4631 17.4253 12.4191C17.3532 12.4034 17.2915 12.3929 17.2437 12.3864L17.1678 12.3784ZM13.7675 15.4034C13.921 15.4034 14.0455 15.5713 14.0455 15.7784C14.0455 15.9625 13.9471 16.1156 13.8175 16.1473L13.7675 16.1534H11.2325C11.079 16.1534 10.9545 15.9855 10.9545 15.7784C10.9545 15.5943 11.0529 15.4412 11.1825 15.4094L11.2325 15.4034H13.7675ZM8.32727 13.54C9.0101 13.54 9.56364 14.0739 9.56364 14.7326C9.56364 15.3912 9.0101 15.9251 8.32727 15.9251C7.64445 15.9251 7.09091 15.3912 7.09091 14.7326C7.09091 14.0739 7.64445 13.54 8.32727 13.54ZM16.4409 13.54C17.1237 13.54 17.6773 14.0739 17.6773 14.7326C17.6773 15.3912 17.1237 15.9251 16.4409 15.9251C15.7581 15.9251 15.2045 15.3912 15.2045 14.7326C15.2045 14.0739 15.7581 13.54 16.4409 13.54ZM8.32727 14.2854C8.07121 14.2854 7.86364 14.4856 7.86364 14.7326C7.86364 14.9796 8.07121 15.1798 8.32727 15.1798C8.58333 15.1798 8.79091 14.9796 8.79091 14.7326C8.79091 14.4856 8.58333 14.2854 8.32727 14.2854ZM16.4409 14.2854C16.1848 14.2854 15.9773 14.4856 15.9773 14.7326C15.9773 14.9796 16.1848 15.1798 16.4409 15.1798C16.697 15.1798 16.9045 14.9796 16.9045 14.7326C16.9045 14.4856 16.697 14.2854 16.4409 14.2854ZM13.7675 13.9127C13.921 13.9127 14.0455 14.0806 14.0455 14.2877C14.0455 14.4718 13.9471 14.6249 13.8175 14.6567L13.7675 14.6627H11.2325C11.079 14.6627 10.9545 14.4948 10.9545 14.2877C10.9545 14.1036 11.0529 13.9505 11.1825 13.9187L11.2325 13.9127H13.7675ZM14.9711 8.69241L10.0272 8.69239C9.82544 8.69129 9.64057 8.806 9.53963 8.98833L9.50584 9.05978L8.47873 11.676L16.5213 11.6767L15.4948 9.06138C15.4153 8.86149 15.244 8.72444 15.0463 8.69733L14.9711 8.69241Z"/>',
      }}
    />
  )
)

export const tags = ['garage', 'criteria', 'immobilierneuf']
