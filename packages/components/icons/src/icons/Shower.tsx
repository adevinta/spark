import React, { type Ref } from 'react'

import { IconProps } from '../Types'

export const Shower = React.forwardRef(
  (
    { title, fill = 'currentColor', stroke = 'none', ...props }: IconProps,
    ref: Ref<SVGSVGElement>
  ) => (
    <svg
      ref={ref}
      viewBox="0 0 24 24"
      xmlns="http://www.w3.org/2000/svg"
      {...{ ...(title && { 'data-title': title }), fill, stroke, ...props }}
      dangerouslySetInnerHTML={{
        __html:
          (title === undefined ? '' : `<title>${title}</title>`) +
          '<path fill-rule="evenodd" clip-rule="evenodd" d="M10.9203 5.20042C11.9816 5.18392 12.9965 5.60166 13.7602 6.37039C14.5188 7.13236 14.9378 8.14558 14.943 9.2233C16.0926 9.39504 16.9889 10.3955 17 11.6112C17.0007 11.7117 16.9624 11.8077 16.8932 11.879C16.824 11.9495 16.7297 11.99 16.6317 11.99H12.5627C12.4647 11.99 12.3704 11.9495 12.3012 11.879C12.232 11.8077 12.1937 11.7117 12.1944 11.6112C12.2055 10.4105 13.0789 9.41754 14.2072 9.22705C14.2028 8.35032 13.8618 7.5261 13.2432 6.90362C12.6201 6.27814 11.7813 5.92865 10.9299 5.9504C9.16895 5.9744 7.73648 7.47435 7.73648 9.29604V13.9091C7.88452 13.8432 8.04802 13.8057 8.22035 13.8057C8.8935 13.8057 9.44144 14.3636 9.44144 15.0491C9.44144 15.7346 8.8935 16.2918 8.22035 16.2918C8.04802 16.2918 7.88452 16.2551 7.73648 16.1898V19.825C7.73648 20.0327 7.57151 20.2 7.36824 20.2C7.16424 20.2 7 20.0327 7 19.825V9.29604C7 7.06711 8.75872 5.22892 10.9203 5.20042ZM14.597 14.8317C14.8002 14.8317 14.9652 14.9997 14.9652 15.2067V15.6679C14.9652 15.8757 14.8002 16.0429 14.597 16.0429C14.3937 16.0429 14.2287 15.8757 14.2287 15.6679V15.2067C14.2287 14.9997 14.3937 14.8317 14.597 14.8317ZM8.22035 14.5556C7.95448 14.5556 7.73869 14.7746 7.73648 15.0454V15.0529C7.73869 15.3229 7.95448 15.5418 8.22035 15.5418C8.4877 15.5418 8.70496 15.3206 8.70496 15.0491C8.70496 14.7769 8.4877 14.5556 8.22035 14.5556ZM15.2303 13.5492C15.4336 13.5492 15.5985 13.7172 15.5985 13.9242V14.3847C15.5985 14.5925 15.4336 14.7597 15.2303 14.7597C15.027 14.7597 14.862 14.5925 14.862 14.3847V13.9242C14.862 13.7172 15.027 13.5492 15.2303 13.5492ZM13.964 13.5492C14.1673 13.5492 14.3323 13.7172 14.3323 13.9242V14.3847C14.3323 14.5925 14.1673 14.7597 13.964 14.7597C13.7608 14.7597 13.5958 14.5925 13.5958 14.3847V13.9242C13.5958 13.7172 13.7608 13.5492 13.964 13.5492ZM14.597 12.2663C14.8002 12.2663 14.9652 12.4335 14.9652 12.6412V13.1025C14.9652 13.3095 14.8002 13.4775 14.597 13.4775C14.3937 13.4775 14.2287 13.3095 14.2287 13.1025V12.6412C14.2287 12.4335 14.3937 12.2663 14.597 12.2663ZM13.3308 12.2661C13.5341 12.2661 13.6991 12.4341 13.6991 12.6411V13.1023C13.6991 13.3101 13.5341 13.4773 13.3308 13.4773C13.1275 13.4773 12.9626 13.3101 12.9626 13.1023V12.6411C12.9626 12.4341 13.1275 12.2661 13.3308 12.2661ZM15.8631 12.2661C16.0664 12.2661 16.2314 12.4341 16.2314 12.6411V13.1023C16.2314 13.3101 16.0664 13.4773 15.8631 13.4773C15.6599 13.4773 15.4949 13.3101 15.4949 13.1023V12.6411C15.4949 12.4341 15.6599 12.2661 15.8631 12.2661ZM14.5968 9.93727C13.8147 9.93727 13.1526 10.4945 12.9766 11.24H16.2178C16.0418 10.4945 15.3797 9.93727 14.5968 9.93727Z"/>',
      }}
    />
  )
)

export const tags = ['shower', 'criteria', 'location']
