import React, { type Ref } from 'react'

import { IconProps } from '../Types'

export const Seats = React.forwardRef(
  (
    { title, fill = 'currentColor', stroke = 'none', ...props }: IconProps,
    ref: Ref<SVGSVGElement>
  ) => (
    <svg
      ref={ref}
      viewBox="0 0 24 24"
      xmlns="http://www.w3.org/2000/svg"
      {...{ ...(title && { 'data-title': title }), fill, stroke, ...props }}
      dangerouslySetInnerHTML={{
        __html:
          (title === undefined ? '' : `<title>${title}</title>`) +
          '<path fill-rule="evenodd" clip-rule="evenodd" d="M5.36842 20.2C5.18756 20.2 5.03713 20.0673 5.00594 19.8924L5 19.825V11.575C5 10.5808 5.76008 9.76742 6.72099 9.70394L6.84211 9.69995H7.57895V8.94995H6.47368C6.29282 8.94995 6.14239 8.81729 6.1112 8.64236L6.10526 8.57495V7.07495C6.10526 6.08084 6.86534 5.26742 7.82625 5.20394L7.94737 5.19995H9.42105C10.3977 5.19995 11.1969 5.9736 11.2592 6.95167L11.2632 7.07495V8.57495C11.2632 8.75905 11.1328 8.91216 10.961 8.94391L10.8947 8.94995H9.78947V9.69995H10.5263C11.1293 9.69995 11.6647 9.99488 12.0007 10.4507C12.3096 10.0299 12.7895 9.74628 13.3358 9.70513L13.4737 9.69995H14.2105V8.94995H13.1053C12.9244 8.94995 12.774 8.81729 12.7428 8.64236L12.7368 8.57495V7.07495C12.7368 6.08084 13.4969 5.26742 14.4578 5.20394L14.5789 5.19995H16.0526C17.0293 5.19995 17.8284 5.9736 17.8908 6.95167L17.8947 7.07495V8.57495C17.8947 8.75905 17.7644 8.91216 17.5925 8.94391L17.5263 8.94995H16.4211V9.69995H17.1579C18.1346 9.69995 18.9337 10.4736 18.9961 11.4517L19 11.575V19.825C19 20.009 18.8697 20.1622 18.6978 20.1939L18.6316 20.2H5.36842ZM10.5263 17.2H6.84211C6.23169 17.2 5.73684 17.7036 5.73684 18.325V19.45H11.6316V18.325L11.6265 18.2166C11.5763 17.6818 11.1582 17.2562 10.6328 17.2051L10.5263 17.2ZM17.1579 17.2H13.4737C12.8633 17.2 12.3684 17.7036 12.3684 18.325V19.45H18.2632V18.325C18.2632 17.7402 17.8248 17.2596 17.2643 17.2051L17.1579 17.2ZM10.5263 10.45H6.84211C6.26759 10.45 5.79546 10.8961 5.7419 11.4666L5.73684 11.575L5.73688 16.8248C6.04474 16.5894 6.42742 16.45 6.84211 16.45H10.5263C10.9413 16.45 11.3243 16.5896 11.6323 16.8254L11.6316 11.575C11.6316 11.0267 11.2463 10.5701 10.7363 10.4702L10.6328 10.4551L10.5263 10.45ZM17.1579 10.45H13.4737C12.8992 10.45 12.427 10.8961 12.3735 11.4666L12.3684 11.575L12.3685 16.8248C12.6763 16.5894 13.059 16.45 13.4737 16.45H17.1579C17.5729 16.45 17.9559 16.5896 18.2639 16.8254L18.2632 11.575C18.2632 11.0267 17.8779 10.5701 17.3679 10.4702L17.2643 10.4551L17.1579 10.45ZM6.33757 12.6052C6.53803 12.6052 6.70054 12.759 6.70054 12.9486C6.70054 13.4721 7.14907 13.8964 7.70236 13.8964H9.42287C9.62171 13.9001 9.78198 14.0517 9.78584 14.2398C9.78584 14.4295 9.62333 14.5832 9.42287 14.5832H7.70236C6.74979 14.5795 5.97857 13.8498 5.97459 12.9486C5.97459 12.759 6.1371 12.6052 6.33757 12.6052ZM13.0998 12.6052C13.3003 12.6052 13.4628 12.759 13.4628 12.9486C13.4628 13.4721 13.9113 13.8964 14.4646 13.8964H16.1851C16.384 13.9001 16.5442 14.0517 16.5481 14.2398C16.5481 14.4295 16.3856 14.5832 16.1851 14.5832H14.4646C13.512 14.5795 12.7408 13.8498 12.7368 12.9486C12.7368 12.759 12.8994 12.6052 13.0998 12.6052ZM15.6842 8.94995H14.9474V9.69995H15.6842V8.94995ZM9.05263 8.94995H8.31579V9.69995H9.05263V8.94995ZM9.42105 5.94995H7.94737C7.37286 5.94995 6.90072 6.39612 6.84716 6.96661L6.84211 7.07495V8.19995H10.5263V7.07495C10.5263 6.52673 10.1411 6.07009 9.63108 5.97024L9.5275 5.9551L9.42105 5.94995ZM16.0526 5.94995H14.5789C14.0044 5.94995 13.5323 6.39612 13.4787 6.96661L13.4737 7.07495V8.19995H17.1579V7.07495C17.1579 6.52673 16.7726 6.07009 16.2627 5.97024L16.1591 5.9551L16.0526 5.94995Z"/>',
      }}
    />
  )
)

export const tags = ['seats', 'criteria', 'automobile']
