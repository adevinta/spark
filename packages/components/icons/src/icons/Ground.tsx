import React, { type Ref } from 'react'

import { IconProps } from '../Types'

export const Ground = React.forwardRef(
  (
    { title, fill = 'currentColor', stroke = 'none', ...props }: IconProps,
    ref: Ref<SVGSVGElement>
  ) => (
    <svg
      ref={ref}
      viewBox="0 0 24 24"
      xmlns="http://www.w3.org/2000/svg"
      {...{ ...(title && { 'data-title': title }), fill, stroke, ...props }}
      dangerouslySetInnerHTML={{
        __html:
          (title === undefined ? '' : `<title>${title}</title>`) +
          '<path fill-rule="evenodd" clip-rule="evenodd" d="M22.933 3.61H22.923H22.8729C22.8729 3.61 22.7827 3.59 22.7126 3.58C22.5723 3.56 22.372 3.54 22.1315 3.52C21.6506 3.47 20.9794 3.42 20.258 3.41C19.5467 3.4 18.7352 3.41 17.9837 3.53C17.2824 3.63 16.4609 3.84 15.8197 4.32C15.3087 4.68 14.8779 5.13 14.5473 5.66C14.2167 6.19 13.9963 6.79 13.8961 7.4C13.7959 8.01 13.846 8.65 14.0063 9.25C14.0263 9.33 14.0464 9.4 14.0764 9.48C13.9762 9.61 13.876 9.75 13.7859 9.88C13.4352 10.36 13.1046 10.87 12.814 11.33C12.5135 10.6 12.1428 9.91 11.712 9.25C11.4314 8.83 11.1309 8.44 10.8103 8.06C11.181 7.35 11.3914 6.57 11.4214 5.77C11.4715 4.37 10.9806 3.01 10.0489 1.95C10.0288 1.92 9.99876 1.9 9.97872 1.88C9.30746 1.23 8.34566 0.86 7.47402 0.63C6.56231 0.39 5.57045 0.24 4.66876 0.16C3.75705 0.05 2.91547 0.02 2.2943 0C1.98372 0 1.73325 0 1.55291 0C1.46274 0 1.39261 0 1.34252 0H1.28241H1.26237C0.58109 0.02 0.0200376 0.56 0 1.24V1.26V1.32C0 1.32 0 1.44 0 1.52C0 1.69 0 1.94 0 2.24C0.0100188 2.84 0.050094 3.66 0.150282 4.53C0.240451 5.4 0.400752 6.37 0.651222 7.25C0.901692 8.09 1.28241 9.03 1.95367 9.68C1.9737 9.7 2.00376 9.72 2.0238 9.75C3.11585 10.66 4.50846 11.13 5.94115 11.08C7.08329 11.04 8.17534 10.66 9.08705 10.01C9.24735 10.21 9.38761 10.41 9.52788 10.62C10.4897 12.07 11.0608 13.78 11.1309 15.86C7.1434 16.21 3.76707 19.05 3.76707 22.83C3.76707 23.48 4.30808 24 4.9593 24C5.61053 24 6.15154 23.48 6.15154 22.83C6.15154 20.42 8.56607 18.16 11.9624 18.16C15.3588 18.16 17.7733 20.42 17.7733 22.83C17.7733 23.48 18.3144 24 18.9656 24C19.6168 24 20.1578 23.48 20.1578 22.83C20.1578 19.36 17.3025 16.67 13.7458 15.99C13.866 15.06 14.1465 14.15 14.5974 13.31C14.8178 12.89 15.1885 12.29 15.6193 11.67C15.8297 11.83 16.0501 11.97 16.2805 12.09C16.8416 12.39 17.4628 12.57 18.0939 12.63C18.7251 12.69 19.3764 12.63 19.9775 12.43C20.5786 12.24 21.1296 11.94 21.6105 11.54C22.2417 11.05 22.6425 10.32 22.913 9.68C23.2035 9 23.4139 8.24 23.5742 7.56C23.7345 6.87 23.8347 6.23 23.9049 5.76C23.9349 5.52 23.965 5.33 23.975 5.19C23.975 5.12 23.985 5.07 23.995 5.03V4.99V4.97C24.0551 4.29 23.5642 3.69 22.893 3.6L22.933 3.61ZM18.3745 10.12C18.0839 10.09 17.8034 10.01 17.5529 9.87C17.4628 9.82 17.3826 9.77 17.3025 9.71C17.3025 9.71 17.3125 9.7 17.3225 9.69C17.8735 9.25 17.9637 8.45 17.5028 7.9C17.2524 7.6 16.9017 7.45 16.531 7.44C16.5811 7.27 16.6613 7.11 16.7514 6.97C16.9017 6.73 17.1021 6.52 17.3425 6.36C17.3626 6.35 17.3826 6.33 17.3926 6.32C17.4928 6.24 17.7834 6.11 18.3745 6.02C18.9155 5.94 19.5667 5.92 20.1979 5.93C20.5886 5.93 20.9593 5.96 21.2899 5.98C21.2398 6.29 21.1697 6.65 21.0896 7.01C20.9493 7.62 20.779 8.21 20.5686 8.71C20.3382 9.24 20.1378 9.49 20.0376 9.57C20.0176 9.58 19.9975 9.6 19.9875 9.61C19.7671 9.79 19.5166 9.93 19.2361 10.02C18.9556 10.11 18.665 10.14 18.3745 10.11V10.12ZM3.75705 7.85C3.56669 7.65 3.34628 7.23 3.1459 6.55C2.94553 5.86 2.81528 5.06 2.72511 4.26C2.65498 3.63 2.62492 3.03 2.60489 2.54C3.12586 2.56 3.75705 2.59 4.40827 2.65C5.23983 2.73 6.07139 2.85 6.78273 3.04C7.49406 3.23 7.91485 3.44 8.12524 3.62C8.60615 4.19 8.85662 4.91 8.82656 5.64C8.82656 5.79 8.80652 5.93 8.77647 6.07C8.00502 5.44 7.15342 4.87 6.24171 4.34C5.63056 3.98 4.83908 4.17 4.46838 4.77C4.09769 5.37 4.29806 6.15 4.90921 6.51C5.78085 7.02 6.56231 7.56 7.26363 8.13C6.83282 8.37 6.35192 8.5 5.84096 8.52C5.07953 8.55 4.32812 8.3 3.74703 7.83L3.75705 7.85Z"/>',
      }}
    />
  )
)

export const tags = ['ground', 'categories']
