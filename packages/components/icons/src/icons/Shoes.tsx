import React, { type Ref } from 'react'

import { IconProps } from '../Types'

export const Shoes = React.forwardRef(
  (
    { title, fill = 'currentColor', stroke = 'none', ...props }: IconProps,
    ref: Ref<SVGSVGElement>
  ) => (
    <svg
      ref={ref}
      viewBox="0 0 24 24"
      xmlns="http://www.w3.org/2000/svg"
      {...{ ...(title && { 'data-title': title }), fill, stroke, ...props }}
      dangerouslySetInnerHTML={{
        __html:
          (title === undefined ? '' : `<title>${title}</title>`) +
          '<path fill-rule="evenodd" clip-rule="evenodd" d="M9.95822 13.2539L14.9086 14.4195C17.6675 15.0645 18.9997 16.0824 18.9997 17.5278L18.9992 18.2573L19 18.2681V19.8136C19 20.0033 18.8624 20.161 18.681 20.1937L18.6111 20.2H5.38889C5.19798 20.2 5.03919 20.0633 5.00627 19.883L5 19.8136V14.5283C5.001 14.3534 5.12037 14.2008 5.29166 14.1553C5.46476 14.1145 5.64512 14.1862 5.74097 14.334C6.09627 14.9472 6.75889 15.3242 7.47517 15.3209C8.49123 15.3146 9.34797 14.5727 9.48526 13.5803C9.49698 13.474 9.55438 13.3778 9.64291 13.3161C9.73504 13.2539 9.84892 13.2314 9.95822 13.2539ZM18.2222 18.6545H5.77778V19.4272H18.2222V18.6545ZM10.1711 14.1087C9.91042 14.9793 9.23419 15.6691 8.36048 15.9557C7.48676 16.2423 6.52608 16.0894 5.78827 15.5463V17.8774H18.2193V17.5433C18.2193 16.5098 17.0527 15.7172 14.7351 15.1733L13.078 14.7862L12.6922 15.7763C12.6388 15.9265 12.4948 16.026 12.3344 16.0236C12.2881 16.0309 12.2408 16.0309 12.1944 16.0236C12.0971 15.9872 12.0184 15.9137 11.976 15.8193C11.9336 15.7249 11.931 15.6176 11.9689 15.5213L12.3197 14.6093L11.6586 14.4555L11.3778 15.1581C11.3085 15.2946 11.166 15.3789 11.0122 15.3745C10.9658 15.3818 10.9186 15.3818 10.8722 15.3745C10.7762 15.3366 10.6993 15.2624 10.6585 15.1682C10.6176 15.074 10.6162 14.9675 10.6544 14.8722L10.8924 14.277L10.1711 14.1087ZM17.1865 3.20934C17.3219 3.23999 17.4305 3.34215 17.4707 3.47666L18.163 5.7354C18.3035 6.2228 18.1896 6.74584 17.8672 7.12701L17.5553 12.1066C17.5395 12.3108 17.3729 12.4693 17.1707 12.4727H16.1476C15.9369 12.4685 15.7671 12.2966 15.763 12.0832L15.7629 9.10591L12.5937 12.0677C12.3424 12.2956 12.0251 12.4326 11.6914 12.4599L11.5475 12.4649L6.16281 12.3714C5.95511 12.3632 5.78979 12.1924 5.78588 11.982C5.71096 11.1347 6.16102 10.3287 6.91667 9.95691L9.2244 8.95995C9.31804 8.921 9.42307 8.921 9.51671 8.95995C9.90068 9.09381 10.2941 9.19796 10.6937 9.2715C11.0181 9.35529 11.3626 9.28034 11.6244 9.06899L16.8168 3.32867C16.9098 3.22429 17.051 3.17869 17.1865 3.20934ZM17.0524 7.90045L16.5321 8.38727L16.5322 11.6938H16.8092L17.0524 7.90045ZM16.9322 4.33342L12.1629 9.6142C11.7284 10.0087 11.132 10.1655 10.5629 10.0348C10.1665 9.96512 9.77574 9.8662 9.39363 9.73882L7.20129 10.6735C6.85886 10.862 6.62907 11.2081 6.58589 11.6003L11.5321 11.686C11.7243 11.6939 11.911 11.6205 12.0475 11.4835L15.8778 7.90876C15.8805 7.90603 15.8833 7.90333 15.8861 7.90068L17.2399 6.6389C17.4196 6.45796 17.49 6.19357 17.4245 5.9457L16.9322 4.33342Z"/>',
      }}
    />
  )
)

export const tags = ['shoes', 'criteria', 'mode']
