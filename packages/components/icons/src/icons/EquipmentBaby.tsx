import React, { type Ref } from 'react'

import { IconProps } from '../Types'

export const EquipmentBaby = React.forwardRef(
  (
    { title, fill = 'currentColor', stroke = 'none', ...props }: IconProps,
    ref: Ref<SVGSVGElement>
  ) => (
    <svg
      ref={ref}
      viewBox="0 0 24 24"
      xmlns="http://www.w3.org/2000/svg"
      {...{ ...(title && { 'data-title': title }), fill, stroke, ...props }}
      dangerouslySetInnerHTML={{
        __html:
          (title === undefined ? '' : `<title>${title}</title>`) +
          '<path fill-rule="evenodd" clip-rule="evenodd" d="M18.9776 4.19995C19.256 4.19995 19.5128 4.30789 19.7093 4.5044C20.051 4.86915 20.2058 5.53686 19.5195 6.22243L19.4934 6.25072C19.4748 6.27528 19.4458 6.31101 19.3996 6.33781C19.2373 6.48966 19.1182 6.68246 19.0743 6.876C18.9686 7.2735 18.7446 7.6576 18.4408 7.9613C18.4334 7.97545 18.4215 7.99182 18.4066 8.00894C18.487 8.17643 18.5302 8.37146 18.5302 8.57542C18.5302 8.89997 18.4237 9.19772 18.222 9.43815C18.2614 9.53864 18.2838 9.64956 18.2838 9.74781C18.2838 9.95252 18.1982 10.1505 18.0426 10.3046L17.552 10.7959C17.5074 10.8398 17.4627 10.8756 17.4128 10.9061C17.5416 11.2678 17.45 11.672 17.1731 11.9489L10.2294 18.9022C10.0098 19.098 9.75893 19.2 9.50137 19.2C9.23264 19.2 8.96094 19.089 8.77335 18.9037L5.2918 15.4446C5.10347 15.257 5 15.0016 5 14.7262C5 14.4516 5.10347 14.197 5.2918 14.0094L12.2735 7.03604C12.5742 6.76806 12.9375 6.67278 13.2941 6.78667C13.3268 6.73233 13.3641 6.68469 13.4087 6.63928L13.9008 6.14799C14.1204 5.90979 14.4844 5.85099 14.7955 6.00135C15.0352 5.80483 15.33 5.70062 15.6501 5.70062C15.8421 5.70062 16.0297 5.74305 16.1965 5.8227C16.2129 5.80409 16.2307 5.78622 16.2478 5.7691C16.5508 5.46689 16.9357 5.24283 17.3287 5.13936C17.5312 5.09321 17.7285 4.97038 17.887 4.79397L17.9882 4.69348C18.2979 4.37339 18.6403 4.20293 18.9776 4.19995ZM13.0015 7.46406C12.9226 7.46406 12.8571 7.49086 12.802 7.54594L5.82033 14.5193C5.76152 14.5781 5.72951 14.6518 5.72951 14.7277C5.72951 14.8036 5.76152 14.8766 5.81958 14.9339L9.28326 18.3938C9.39641 18.4958 9.5974 18.4958 9.70087 18.393L16.6833 11.4398C16.7414 11.381 16.7734 11.3065 16.7734 11.2314C16.7734 11.1554 16.7414 11.0817 16.6826 11.0222L13.201 7.54594C13.1556 7.50053 13.0663 7.46406 13.0015 7.46406ZM9.49296 15.4833C9.63365 15.3403 9.85772 15.3403 10.0021 15.4833V15.484L10.8917 16.3721C10.9602 16.4405 10.9981 16.5313 10.9981 16.6266C10.9981 16.7212 10.9602 16.812 10.8917 16.8812C10.8239 16.9467 10.7264 16.9884 10.6364 16.9884C10.5545 16.9884 10.4644 16.9527 10.3996 16.8976H10.3981L9.49222 15.9924C9.42299 15.9232 9.38502 15.8324 9.38502 15.7378C9.38502 15.6418 9.42299 15.5517 9.49296 15.4833ZM10.6464 14.3496C10.7901 14.206 11.0134 14.206 11.1563 14.3496H11.1571L12.028 15.2392C12.0957 15.3077 12.1337 15.3977 12.1337 15.4923C12.1337 15.5876 12.0957 15.6784 12.0265 15.7468C11.9595 15.8131 11.862 15.8548 11.7719 15.8548C11.6811 15.8548 11.5836 15.8131 11.5173 15.7468L10.6449 14.8573C10.5772 14.7896 10.54 14.7002 10.5392 14.6057C10.5392 14.5104 10.5772 14.4189 10.6464 14.3496ZM11.7814 13.216C11.9243 13.0715 12.1476 13.0715 12.2913 13.216L13.1809 14.104C13.3238 14.2462 13.3238 14.471 13.1809 14.6139C13.1131 14.6794 13.0156 14.7211 12.9263 14.7211C12.8451 14.7211 12.7551 14.6854 12.6896 14.6303H12.6881L11.7814 13.7251C11.6392 13.5829 11.6392 13.3581 11.7814 13.216ZM12.9173 12.0635C13.0603 11.9213 13.2843 11.9213 13.4272 12.0635L14.3168 12.9508C14.459 13.0937 14.459 13.3185 14.3168 13.4607C14.2483 13.5277 14.1508 13.5686 14.0607 13.5686C13.9922 13.5686 13.8843 13.5396 13.8054 13.46L12.9173 12.5727C12.8481 12.5034 12.8101 12.4126 12.8101 12.3181C12.8101 12.2228 12.8481 12.132 12.9173 12.0635ZM14.0517 10.9294C14.1909 10.7925 14.4254 10.7932 14.5624 10.9294L15.4519 11.8175C15.5941 11.9604 15.5941 12.1845 15.4519 12.3266C15.3849 12.3922 15.2852 12.4346 15.1966 12.4346C15.1281 12.4346 15.0194 12.4055 14.9405 12.3259L14.0517 11.4379C13.9832 11.3694 13.9453 11.2793 13.9453 11.1848C13.9453 11.0887 13.9825 10.9987 14.0517 10.9294ZM14.4397 6.63258C14.4315 6.63333 14.4017 6.64747 14.3906 6.65789L13.9008 7.14844C13.8866 7.16258 13.8784 7.18045 13.8799 7.19608C13.8799 7.20427 13.8822 7.20948 13.8859 7.21171L16.9654 10.3061C16.993 10.3329 17.0362 10.3307 17.0615 10.3061L17.552 9.81481C17.5773 9.7895 17.5773 9.7761 17.5773 9.76642C17.5773 9.76121 17.5773 9.74409 17.5528 9.71878L14.4873 6.65715C14.4628 6.63259 14.4494 6.63258 14.4397 6.63258ZM16.0774 6.61919C15.8816 6.42341 15.5712 6.37652 15.3441 6.49562L17.7158 8.89922C17.762 8.81362 17.7858 8.71834 17.7858 8.61338C17.7858 8.43994 17.7419 8.31563 17.6391 8.19876L17.6101 8.16526C17.4878 8.03425 16.9577 7.50144 16.5362 7.07892L16.3202 6.86246C16.2871 6.82923 16.2556 6.79769 16.2261 6.76821L16.0774 6.61919ZM19.1986 5.01356C18.9679 4.79918 18.6604 5.04036 18.4982 5.20189L18.4222 5.27781C18.158 5.56291 17.8409 5.75571 17.5066 5.83461C17.2453 5.89937 16.9893 6.04974 16.7652 6.27082L17.9406 7.44321C18.1609 7.2199 18.3128 6.96309 18.3768 6.70107C18.4557 6.36907 18.65 6.05122 18.9388 5.78399L19.0066 5.717C19.1927 5.53016 19.2909 5.3597 19.2909 5.22124C19.2909 5.14383 19.2604 5.07534 19.1986 5.01356Z"/>',
      }}
    />
  )
)

EquipmentBaby.displayName = 'EquipmentBaby'

export const tags = ['equipment-baby', 'criteria', 'mode']
