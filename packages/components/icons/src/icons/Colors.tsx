import React, { type Ref } from 'react'

import { IconProps } from '../Types'

export const Colors = React.forwardRef(
  (
    { title, fill = 'currentColor', stroke = 'none', ...props }: IconProps,
    ref: Ref<SVGSVGElement>
  ) => (
    <svg
      ref={ref}
      viewBox="0 0 24 24"
      xmlns="http://www.w3.org/2000/svg"
      {...{ ...(title && { 'data-title': title }), fill, stroke, ...props }}
      dangerouslySetInnerHTML={{
        __html:
          (title === undefined ? '' : `<title>${title}</title>`) +
          '<path fill-rule="evenodd" clip-rule="evenodd" d="M12.4375 5.19995C13.6586 5.19995 14.3687 5.52723 14.6256 6.21547C14.7873 6.64858 14.7717 7.00192 14.5931 7.8765L14.4474 8.56896L14.3846 8.91349C14.2575 9.70762 14.3242 10.2447 14.6555 10.6645C15.0253 11.1331 15.4325 11.1278 16.4456 10.7601L16.7253 10.6588C17.5902 10.3516 17.9946 10.2851 18.498 10.464C19.2061 10.7155 19.6504 11.4809 19.8919 12.8702C20.6549 17.2588 17.2893 20.1143 12.6232 20.1983L12.436 20.2C8.33324 20.1833 5.01276 16.9377 5 12.9305V12.4683C5.01252 8.53906 8.2117 5.32899 12.2298 5.20355L12.4375 5.19995ZM12.4412 5.91969L12.2482 5.92377C8.63224 6.03669 5.74912 8.92962 5.73784 12.4694V12.9294C5.74934 16.5396 8.74171 19.4645 12.4341 19.4795L12.613 19.4779C16.8711 19.4012 19.8409 16.8816 19.1645 12.9908C18.9627 11.83 18.645 11.2829 18.2457 11.141C17.9837 11.0479 17.7032 11.0867 17.1045 11.2917L16.5445 11.4915C15.3543 11.903 14.6825 11.879 14.0711 11.1043C13.5899 10.4947 13.5002 9.77266 13.6556 8.8022C13.6795 8.65335 13.7056 8.51393 13.744 8.32887L13.8322 7.91495C14.0122 7.06169 14.0387 6.74693 13.9324 6.46219C13.8024 6.11403 13.3824 5.92041 12.4412 5.91969ZM11.4156 15.7187C12.2122 15.7187 12.8581 16.3493 12.8581 17.1272C12.8581 17.9051 12.2122 18.5357 11.4156 18.5357H10.995C10.1983 18.5357 9.55251 17.9051 9.55251 17.1272C9.55251 16.3493 10.1983 15.7187 10.995 15.7187H11.4156ZM14.8502 15.2216C15.6938 15.2216 16.3776 15.8893 16.3776 16.7129V16.857C16.3776 17.5863 15.809 18.1937 15.0527 18.2639L14.9314 18.2691C14.1327 18.2691 13.4852 17.6369 13.4852 16.857V16.5472C13.4852 16.1939 13.6297 15.8552 13.8864 15.6063C14.1058 15.3938 14.3925 15.2609 14.7199 15.2274L14.8502 15.2216ZM11.4156 16.4391H10.995C10.6058 16.4391 10.2904 16.7472 10.2904 17.1272C10.2904 17.5072 10.6058 17.8152 10.995 17.8152H11.4156C11.8047 17.8152 12.1202 17.5072 12.1202 17.1272C12.1202 16.7472 11.8047 16.4391 11.4156 16.4391ZM14.8535 15.9415L14.7772 15.9454C14.6373 15.96 14.5064 16.0206 14.4062 16.1177C14.289 16.2313 14.2231 16.3859 14.2231 16.5472V16.857C14.2231 17.239 14.5402 17.5487 14.9139 17.5491L15.0001 17.5455C15.3611 17.5118 15.6397 17.2141 15.6397 16.857V16.7129C15.6397 16.2872 15.2863 15.942 14.8502 15.942L14.8535 15.9415ZM17.2671 12.5924L17.3797 12.5983C18.1185 12.6673 18.687 13.2747 18.687 14.004V14.393C18.687 15.0496 18.142 15.5818 17.4696 15.5818H17.4062C16.5726 15.5721 15.8852 14.945 15.8143 14.1234L15.8094 14.004C15.8094 13.2747 16.378 12.6673 17.133 12.5972L17.2671 12.5924ZM17.2671 13.3119L17.187 13.3155C16.8259 13.3492 16.5473 13.6469 16.547 13.9888L16.5505 14.0778C16.5884 14.5152 16.9621 14.8561 17.4106 14.8613H17.4696C17.7345 14.8613 17.9492 14.6517 17.9492 14.393V14.004C17.9492 13.6469 17.6706 13.3492 17.3258 13.3167L17.2671 13.3119ZM9.11877 7.7784C9.9555 7.18707 11.1247 7.40236 11.7303 8.25927C12.336 9.11619 12.1486 10.2902 11.3119 10.8816L10.7235 11.2974C9.88679 11.8887 8.71755 11.6734 8.11194 10.8165C7.50633 9.95959 7.69369 8.78555 8.53041 8.19421L9.11877 7.7784ZM11.142 8.67508C10.7716 8.15095 10.0564 8.01927 9.54462 8.38096L8.95626 8.79677C8.44447 9.15846 8.32988 9.87657 8.7003 10.4007C9.07072 10.9248 9.78588 11.0565 10.2977 10.6948L10.886 10.279C11.3978 9.91732 11.5124 9.19922 11.142 8.67508Z"/>',
      }}
    />
  )
)

export const tags = ['colors', 'criteria', 'multimedia']
