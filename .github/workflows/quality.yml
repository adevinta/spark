name: quality
on:
  pull_request:
    branches: [main]
jobs:
  assign-pr-owner:
    runs-on: ubuntu-latest
    name: PR assignment
    steps:
      - name: Assign PR
        uses: toshimaru/auto-author-assign@v1.6.0
        if: github.event_name == 'pull_request' && github.event.action == 'opened'
        with:
          repo-token: ${{ secrets.GITHUB_TOKEN }}
  lint:
    runs-on: ubuntu-latest
    name: lint
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Install
        uses: ./.github/composite-actions/install

      - name: Lint
        run: npm run lint
  typecheck:
    runs-on: ubuntu-latest
    name: Typecheck
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Install
        uses: ./.github/composite-actions/install

      - name: Type checking
        run: npm run typecheck
  test:
    runs-on: ubuntu-latest
    name: test
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Install
        uses: ./.github/composite-actions/install

      - name: Test
        run: npm run test
  visual-testing:
    runs-on: ubuntu-latest
    name: visual testing
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Install
        uses: ./.github/composite-actions/install

      - name: Publish to Chromatic
        uses: chromaui/action@v1
        with:
          projectToken: ${{ secrets.CHROMATIC_PROJECT_TOKEN }}
          buildScriptName: 'storybook:build'
  deploy:
    runs-on: ubuntu-latest
    environment:
      name: ${{ github.event_name != 'pull_request' && 'Production' || 'Preview'}}
      url: ${{ steps.deployment.outputs.url }}
    steps:
      - uses: actions/checkout@v2
      - name: Install
        uses: ./.github/composite-actions/install
      - name: Install Vercel CLI
        run: npm install --global vercel@latest --no-save --no-fund --no-audit --no-scripts
      - name: Build Storybook
        run: npm run storybook:build
      - name: Deploy Storybook to Vercel
        id: deployment
        run: |
          DEPLOYMENT_URL=$(vercel deploy --token $VERCEL_TOKEN --yes)
          echo "::set-output name=url::$(echo $DEPLOYMENT_URL)"
        env:
          VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
          VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}
          VERCEL_TOKEN: ${{secrets.VERCEL_TOKEN}}
